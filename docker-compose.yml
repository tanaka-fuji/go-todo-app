services:
  web:
    container_name: web
    build:
      context: ./web
      target: ${NODE_ENV}
      args:
        - VITE_API_PORT=${API_PORT}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    environment:
      - WEB_PORT=${WEB_PORT}
      - API_PORT=${API_PORT}
      - VITE_API_PORT=${API_PORT}s
    develop:
      watch:
        - action: sync
          path: ./web
          target: /app
        - action: rebuild
          path: ./web/package.json
        - action: sync+restart
          path: ./web/nginx
          target: /etc/nginx
    networks:
      - external_net
      - internal_net
  api:
    container_name: api
    build:
      context: ./api
      target: ${GIN_MODE}
    depends_on:
      - db
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      - GIN_MODE=${GIN_MODE}
      - API_PORT=${API_PORT}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    develop:
      watch:
        - action: sync+restart
          path: ./api
          target: /app
        - action: rebuild
          path: ./api/go.mod
          target: /app/go.mod
    networks:
      - internal_net

  db:
    container_name: db
    image: mysql:8.4.0
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - MYSQL_PORT=${DB_PORT}
      - MYSQL_HOST=${DB_HOST}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - internal_net
volumes:
  mysql_data:

networks:
  internal_net:
    internal: true
  external_net: